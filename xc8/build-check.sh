#!/usr/bin/env bash

# ------ build-check.sh ------
# Build the project and look out for any errors or warnings generated by the compiler.
#
# The command exits with an error code (1) if any error message is found during the
# compilation process. Otherwise it exits with a zero (0).
# Failure can also be triggered if any warnings are found by setting the
# environment variable "BUILD_STRICT" (the value does not matter).
#
# The program expects the repository to contain a valid Makefile at its root. It also
# expects it to have a default target which builds the whole project and a clean target,
# this last target will always be run before compilation.
# ----------------------------
set -e

cd ${REPO_DIR}
make clean

log_file=$(mktemp)
make 2>&1 | tee ${log_file}

warning_count=$(grep -e "warning:" ${log_file} | wc -l)
error_count=$(grep -e "error:" ${log_file} | wc -l)

echo
echo "------ RESULTS ------"
echo "${warning_count} warnings found."
echo "${error_count} errors found."

if [[ ${error_count} -ne 0 ]]; then
	echo "FAILURE: Errors were found."
	exit 1
fi

if [[ -v BUILD_STRICT && ${warning_count} -ne 0 ]]; then
	echo "FAILURE: Warnings were found (BUILD_STRICT is enabled)."
	exit 1
fi

echo "SUCCESS :)"
exit 0
